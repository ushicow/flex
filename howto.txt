TODO
　カーソルが出るようにする
　オートブートで WARM BOOT になってしまうのを修正

FLEX for the MILL

Memory map
6809	6502	
$FFF0	$7FF0	6809 reset vector
$E000	$6000	Free
$D000	$5000	FLEX OS
$C700	$4700	FLEX OS
$C100   $4100   FLEXLOAD
$C000   $4000   QLOAD
$B000	$3000	APPLE DOS 16K (RWTS)
$A000	$2000	APPLE DOS 16K
$9C00	$1C00	APPLE DOS 16K
$9000   $1000   MILLBIOS
$8800	$0800	Free
$8000	$0000	Apple System
$7000	$F000	Apple ROM
$6000	$E000	Apple ROM
$5000	$D000	Apple ROM
$4000	$C000	Apple I/O
$3000	$B000	Free
$2000	$A000	Free
$1000	$9000	Free
$0000	$8000	Free

上記メモリマップで Apple DOS の Disk I/O を使うため、
リロケータを無効にする。
Beneath Apple DOS の ZAP を使用して、
02:0 A 1 (Track 0 Sector A Read 1)
900G
803:4c 84 1D
02:0 A 2 (Track 0 Sector A Write 2)
900G

6502 BIOS ルーチン (BIOS6502)
6809 のリセットベクターを設定 ($7FFE)
MEMEND ($CC2B-$8000=$4C2B) に $3FFF をセット。
キー入力($C000)を監視し、入力があれば KEYLOC ($0006) に保存。
TVLOC ($0007)を監視し、非ゼロなら表示。
DOSLOC ($0008)を監視し、非ゼロならRWTSを呼び出す。
FLAG ($0009)を監視し、非ゼロならMILLを停止。

ディスクスキュー EXCEL-9 FLEX と同じにする。CP/Mも同じ。
flex	logical　physical
1	0	0	
2	6	3
3	C	6
4	3	9
5	9	C
6	F	F
7	E	2
8	5	5
9	B	8
10	2	B
11	8	E
12	7	1
13	D	4
14	4	7
15	A	A
16	1	D

flex	logical　physical
1	0	0	
16	1	D
10	2	B
4	3	9
14	4	7
8	5	5
2	6	3
12	7	1
11	8	E
5	9	C
15	A	A
9	B	8
3	C	6
13	D	4
7	E	2
6	F	F

FLEX.CORの取り出し
https://flexonsbd.blogspot.com/2018/06/flex.html
FLEXSSB.DSK
から
FlexDrvWin を使い
FLEX.SYSをパケット形式で読み出し
pac2binでバイナリに変換
hexdump FLEX.SYS

00014b0 bd de 12 25 e8 39 c6 10 1a 01 39 00 00 00 00 00
00014c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00015a0 00 00 00 00 00 00 00 00 02 de 00 1e 7e e8 10 7e
00015b0 e8 13 7e e8 16 7e e8 19 7e e8 1c 7e e8 1f 7e e8
00015c0 22 7e e8 25 7e e8 28 7e e8 2b 00 00 00 00 00 00
00015d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00016a0 00 00 00 00 02 d3 e5 18 d3 88 d3 d6 f3 c2 f3 c8
00016b0 d3 cf d3 cb d3 b5 fb 1b d3 70 d3 aa d3 99 d3 97
00016c0 02 d3 70 6d be f3 e2 bf d3 e3 30 01 bf d3 e1 86
00016d0 13 a7 9f d3 e3 86 16 a7 9f d3 e3 39 a6 9f d3 e3
00016e0 84 01 27 f8 a6 9f d3 e1 84 7f 39 8d ef 34 02 a6
00016f0 9f d3 e3 84 02 27 f8 35 02 a7 9f d3 e1 39 34 02
0001700 a6 9f d3 e3 84 01 35 02 39 be d3 df 86 ff a7 84
0001710 86 3c a7 01 86 8f a7 84 a6 84 86 3d a7 01 39 86
0001720 04 20 02 86 8f a7 9f d3 df 39 a6 9f d3 df 7e c7
0001730 00 02 d3 df 06 f7 f2 f7 e8 f7 e9 16 cd 00 00 00
0001740 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00017a0

$14C0 (5312) 以下の Driver と Console を削除
dd if=FLEX.SYS of=FLEX.COR bs=1 count=5312


DOS3.3のブートシーケンス
PR#6
Boot0 $801
 $C600 からの ROM ルーチンが、ドライブ0、トラック0、セクタ0を $800 にロードし、$801 にジャンプ
Boot1 $801
 トラック0、ロジカルセクタ9から1が、$3600-3FFFに読み出され、$3700にジャンプ
　つまり、トラック0、セクタ1が$3700から実行される。

Boot2 #3700
 トラック2、セクタ4から逆順に、$3F00から下位アドレスに読み出し、$3D00にジャンプ


Boot2を書き換えることで、IPLを実現する。
Track0, Sector1 を書き換えて、Sector A-D 

Track#0
Sector#0:BOOT1 -> $800
Sector#0-9:BOOT2 -> $3600-3FFF
Sector#A(A):BIOS -> $1000
Sector#B(8):Driver -> $5E00 (6809 $DE00)
Sector#C(6):Console -> $5300 (6809 $D300)
Sector#D(4):QLoad -> $4000 (6809 $C000)
Sector#E(2):TestUtil -> $8100 (6809 $0100)
Track#1
Sector#1:FLEXLOAD -> $4100 (6809 $C100)

apple2 dsk ファイルと flex dsk ファイルの相互変換
　a2dsk2flexdsk <a2.dsk >flex.dsk track #0 を削除し、セクター順を apple logical から flex に並べ替える
　flexds <flexdsk >a.dat セクター順を flex から apple logical に並べ替える。track 0 はない
　dd if=a2.dsk of=a2t0.dat bs=256 count=16 apple2 dsk の track 0 を a2t0.dat に保存
　cat a2t0.dat a2.dat >a2.dsk track 0 と残りのトラックをつなげる

RDKEY $FD0C カーソルを表示し、一文字入力

FLEX.SYS の生成
 SAVE DISK,DE00,DEFF
 SAVE CONSOLE,D370,D3FF,DC00
 APPEND FLEX.COR,DISK,CONSOLE,FLEX.SYS

