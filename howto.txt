TODO
2020.7.31 カーソルが出るようにする
2020.7 31 オートブートで WARM BOOT になってしまうのを修正
2020.8.8 ASMB のメモリエラーの解消
2020.8.8 NEWDISK でブートセクタを書き込む
NEWDISK で Track 0 を書き込む

6809	6502	
$FFFF   $7FFF
		6809 reset vector   
$FFF0   $7FF0
		Apple RWTS
$F600	$7600
		FLEX Loader
$E000	$6000
		Disk Drivers
$DE00	$5E00
		File Management-System
$D400	$5400
		Console I/O Drivers
$D370	$5370
		Disk Operating System
$CD00	$4D00
		FLEX Work Area
$C700	$4700
		Utility Area
$C100	$4100
		FLEX Work Area
$C000   $4000
		Hi-Res Page 1
$A000	$2000
		(Free)
$9000	$1000
		6502 BIOS
$8C00	$0C00
		Text Page 2
$8800	$0800	
		Text Page 1
$8400	$0400
		Apple System
$8000	$0000
		Apple ROM
$5000	$D000
		Apple I/O
$4000	$C000
		FLEX User RAM 16KB
$0000	$8000


FLEX for the MILL Memory map
6809	6502	
$FFFF   $7FFF
		6809 reset vector   
$FFF0   $7FF0
		
$F600	$7600
		FLEX Loader
$E000	$6000
		Disk Drivers
$DE00	$5E00
		File Management-System
$D400	$5400
		Console I/O Drivers
$D370	$5370
		Disk Operating System
$CD00	$4D00
		FLEX Work Area
$C700	$4700
		Utility Area
$C100	$4100
		FLEX Work Area
$C000   $4000
		Apple RWTS
$B600	$3600
		(Free)
$9100	$1100
		6502 BIOS
$9000	$1000
		(Free)
$8C00	$0C00
		Text Page 2
$8800	$0800	
		Text Page 1
$8400	$0400
		Apple System
$8000	$0000
		Apple ROM
$5000	$D000
		Apple I/O
$4000	$C000
		FLEX User RAM 16KB
$0000	$8000

0	8
1	9
2	A
3	B
4	C
5	D
6	E
7	F
8	0
9	1
A	2
B	3
C	4
D	5
E	6
F	7


上記メモリマップで Apple DOS の Disk I/O を使うため、
リロケータを無効にする。
Beneath Apple DOS の ZAP を使用して、
02:0 A 1 (Track 0 Sector A Read 1)
900G
803:4c 84 1D
02:0 A 2 (Track 0 Sector A Write 2)
900G

6502 BIOS ルーチン (BIOS6502)
6809 のリセットベクターを設定 ($7FFE)
MEMEND ($CC2B-$8000=$4C2B) に $3FFF をセット。
キー入力($C000)を監視し、入力があれば KEYLOC ($0006) に保存。
TVLOC ($0007)を監視し、非ゼロなら表示。
DOSLOC ($0008)を監視し、非ゼロならRWTSを呼び出す。
FLAG ($0009)を監視し、非ゼロならMILLを停止。

ディスクスキュー EXCEL-9 FLEX と同じにする。CP/Mも同じ。
flex	logical　physical
1	0	0	
2	6	3
3	C	6
4	3	9
5	9	C
6	F	F
7	E	2
8	5	5
9	B	8
10	2	B
11	8	E
12	7	1
13	D	4
14	4	7
15	A	A
16	1	D

flex	logical　physical
1	0	0	
16	1	D
10	2	B
4	3	9
14	4	7
8	5	5
2	6	3
12	7	1
11	8	E
5	9	C
15	A	A
9	B	8
3	C	6
13	D	4
7	E	2
6	F	F

FLEX.CORの取り出し
https://flexonsbd.blogspot.com/2018/06/flex.html
FLEXSSB.DSK
から
FlexDrvWin を使い
FLEX.SYSをパケット形式で読み出し
pac2binでバイナリに変換
hexdump FLEX.SYS

00014b0 bd de 12 25 e8 39 c6 10 1a 01 39 00 00 00 00 00
00014c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00015a0 00 00 00 00 00 00 00 00 02 de 00 1e 7e e8 10 7e
00015b0 e8 13 7e e8 16 7e e8 19 7e e8 1c 7e e8 1f 7e e8
00015c0 22 7e e8 25 7e e8 28 7e e8 2b 00 00 00 00 00 00
00015d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00016a0 00 00 00 00 02 d3 e5 18 d3 88 d3 d6 f3 c2 f3 c8
00016b0 d3 cf d3 cb d3 b5 fb 1b d3 70 d3 aa d3 99 d3 97
00016c0 02 d3 70 6d be f3 e2 bf d3 e3 30 01 bf d3 e1 86
00016d0 13 a7 9f d3 e3 86 16 a7 9f d3 e3 39 a6 9f d3 e3
00016e0 84 01 27 f8 a6 9f d3 e1 84 7f 39 8d ef 34 02 a6
00016f0 9f d3 e3 84 02 27 f8 35 02 a7 9f d3 e1 39 34 02
0001700 a6 9f d3 e3 84 01 35 02 39 be d3 df 86 ff a7 84
0001710 86 3c a7 01 86 8f a7 84 a6 84 86 3d a7 01 39 86
0001720 04 20 02 86 8f a7 9f d3 df 39 a6 9f d3 df 7e c7
0001730 00 02 d3 df 06 f7 f2 f7 e8 f7 e9 16 cd 00 00 00
0001740 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00017a0

$14C0 (5312) 以下の Driver と Console を削除
dd if=FLEX.SYS of=FLEX.COR bs=1 count=5312


DOS3.3のブートシーケンス
PR#6
Boot0 $801
 $C600 からの ROM ルーチンが、ドライブ0、トラック0、セクタ0を $800 にロードし、$801 にジャンプ
Boot1 $801
 トラック0、ロジカルセクタ9から0が、$3600-3FFFに読み出され、$3700にジャンプ
　つまり、トラック0、セクタ1が$3700から実行される。
Boot2 #3700
 トラック2、セクタ4から逆順に、$3F00から下位アドレスに読み出し、$3D00にジャンプ

T0S0 -> $3600
T0S1 -> $3700
T0S2 -> $3800
T0S3 -> $3900
T0S4 -> $3A00
T0S5 -> $3B00
T0S6 -> $3C00
T0S7 -> $3D00
T0S8 -> $3E00
T0S9 -> $3F00


Boot2を書き換えることで、IPLを実現する。
Track0, Sector1 を書き換えて、Sector A-D を書き領域に読み出す。

T0SA(A):BIOS -> $0C00
T0SB(8):Driver -> $5E00 (6809 $DE00)
T0SC(6):Console -> $5300 (6809 $D300)
T0SD(4):FLEXLOAD -> $E100 (6809 $6100)
T0SE(2):TestUtil -> $E000 (6809 $6000)
T1S0(0):FLEXLOAD -> $4100 (6809 $C100)

Drive 0 に FLEXDEV.dsk(DOS3.3)、Drive 1 に a2flex.dsk(FLEX) を入れる。

BLOAD FLEXCOR.BIN,D1,A$4700
BLOAD CONSOLE.5370,A$5370
BLOAD CONSOLE.53E5,A$53E5
BLOAD DRIVER.5E00,A$5E00
BLOAD MILLBIOS
BSAVE FLEX,A$4700,L$1800

BLOAD ZAP,D1
2:0 0 1
900G
CATALOG,D2
2:0 0 2
900G
BLOAD ZAP,D1
2:0 1 1
900G
BLOAD IPL,D1,A$800
CATALOG,D2
2:0 1 2
900G
BLOAD ZAP,D1
2:0 2 1
900G
CATALOG,D2
2:0 2 2
900G
BLOAD ZAP,D1
2:0 3 1
900G
CATALOG,D2
2:0 3 2
900G
BLOAD ZAP,D1
2:0 4 1
900G
CATALOG,D2
2:0 4 2
900G
BLOAD ZAP,D1
2:0 5 1
900G
CATALOG,D2
2:0 5 2
900G
BLOAD ZAP,D1
2:0 6 1
900G
CATALOG,D2
2:0 6 2
900G
BLOAD ZAP,D1
2:0 7 1
900G
CATALOG,D2
2:0 7 2
900G
BLOAD ZAP,D1
2:0 8 1
900G
CATALOG,D2
2:0 8 2
BLOAD ZAP,D1
2:0 9 1
900G
CATALOG,D2
2:0 9 2
900G

BLOAD MILLBIOS,D1,A$800
CATALOG,D2
2:0 A 2
900G

BLOAD DRIVER.5E00,D1,A$800
CATALOG,D2
2:0 B 2
900G

BLOAD CONSOLE.5370,D1,A$870
BLOAD CONSOLE.53E5,D1,A$8E5
CATALOG,D2
2:0 C 2
900G

BLOAD FLEXLOAD,D1,A$800
CATALOG,D2
2:0 D 2
900G
2:1 0 2
900G

BLOAD TESTUTIL.8100,D1,A$800
CATALOG,D2
2:0 E 2
900G

FLEXDEV.dsk で起動


apple2 dsk ファイルと flex dsk ファイルの相互変換
　a2dsk2flexdsk <a2.dsk >flex.dsk track #0 を削除し、セクター順を apple logical から flex に並べ替える
　flexdsk2a2dsk <flexdsk >a.dat セクター順を flex から apple logical に並べ替える。track 0 はない
　dd if=a2.dsk of=a2t0.dat bs=256 count=16 apple2 dsk の track 0 を a2t0.dat に保存
　cat a2t0.dat a2.dat >a2.dsk track 0 と残りのトラックをつなげる

RDKEY $FD0C カーソルを表示し、一文字入力

FLEX.SYS の生成
 SAVE DISK,DE00,DEFF
 SAVE CONSOLE,D370,D3FF,DC00
 APPEND FLEX.COR,DISK,CONSOLE,FLEX.SYS

ASMB ワークメモリ変更
+++GET ASMB.CMD
+++MON


SOURCE BUFFER		$
MACRO NAME TABLE	$
MACRO ACTIVATION BUFFER	$
MACRO TEXT BUFFER	0.31 128=$80 $
SYMBOL TABLE		= (AVK-1K)*0.625 =  $
