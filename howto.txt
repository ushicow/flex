TODO
2020.7.31 カーソルが出るようにする
2020.7 31 オートブートで WARM BOOT になってしまうのを修正
2020.8.8 ASMB のメモリエラーの解消
2020.8.8 NEWDISK でブートセクタを書き込む
2020.8.12 NEWDISK で Track 0 を書き込む
2020.8.13 Disk II コントローラのスロットを自動設定
2020.8.13 The MILL のスロットを自動認識
BIOS の書き直し

Memory MAP
6809	6502
$0000	$8000
		FLEX User RAM 16KB
$4000	$C000
		Apple I/O
$5000	$D000
		Apple ROM (LC RAM)
$8000	$0000
		Apple System
$8400	$0400
		Text Page 1
$8800	$0800	
		Text Page 2
$8C00	$0C00
		(Free)
$A000	$2000
		Hi-Res Page 1
$C000   $4000
		FLEX System Stack
$C080	$4080
		FLEX Input Buffer
$C100	$4100
		Utility Area
$C700	$4700
		FLEX Work Area
$CD00	$4D00
		Disk Operating System
$D370	$5370
		Console I/O Drivers
$D400	$5400
		File Management-System
$DE00	$5E00
		Disk Drivers
$E000	$6000
		Apple BIOS		
$E100	$6100
		
$E200	$6200
		Free
$F600	$7600
		Apple RWTS
$FFF0   $7FF0
		6809 reset vector   
$FFFF   $7FFF

T0SA(A):MILLBIOS -> $6000 (6809 $E000)
T0SB(8):Driver   -> $5E00 (6809 $DE00)
T0SC(6):Console  -> $5300 (6809 $D300)
T0SD(4):FLEXLOAD -> $6100 (6809 $E100)
T0SE(2):TestUtil -> $6200 (6809 $E200)
T0SF(F):OS9ERRRO -> $6200 (6809 $E300)
T1S0(0):FLEXLOAD -> $4100 (6809 $C100)

ゼロページ
$06 6502セマフォフラグ
$07 KEYLOC
$08 TVLOC
$09 MILL カードスロット x 16

上記メモリマップで Apple DOS の Disk I/O を使うため、
32K RAM システムで INIT したディスクのトラック 0 を取り出す。
dd if=dos3.3-32k.dsk of=dos33-32k-track0.dat bs=256 count=16


6502 BIOS ルーチン (BIOS6502)
6809 のリセットベクターを設定 ($7FFE)
MEMEND ($CC2B-$8000=$4C2B) に $3FFF をセット。
キー入力($C000)を監視し、入力があれば KEYLOC ($0006) に保存。
TVLOC ($0007)を監視し、非ゼロなら表示。
DOSLOC ($0008)を監視し、非ゼロならRWTSを呼び出す。
FLAG ($0009)を監視し、非ゼロならMILLを停止。

ディスクスキュー EXCEL-9 FLEX と同じにする。CP/Mも同じ。
flex	logical　physical
1	0	0	
2	6	3
3	C	6
4	3	9
5	9	C
6	F	F
7	E	2
8	5	5
9	B	8
10	2	B
11	8	E
12	7	1
13	D	4
14	4	7
15	A	A
16	1	D

flex	logical　physical
1	0	0	
16	1	D
10	2	B
4	3	9
14	4	7
8	5	5
2	6	3
12	7	1
11	8	E
5	9	C
15	A	A
9	B	8
3	C	6
13	D	4
7	E	2
6	F	F

flex	logical　physical
1	0	0	
12	7	1
7	E	2
2	6	3
13	D	4
8	5	5
3	C	6
14	4	7
9	B	8
4	3	9
15	A	A
10	2	B
5	9	C
16	1	D
11	8	E
6	F	F

FLEX.CORの取り出し
https://flexonsbd.blogspot.com/2018/06/flex.html
FLEXSSB.DSK
から
FlexDrvWin を使い
FLEX.SYSをパケット形式で読み出し
pac2binでバイナリに変換
hexdump FLEX.SYS

00014b0 bd de 12 25 e8 39 c6 10 1a 01 39 00 00 00 00 00
00014c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00015a0 00 00 00 00 00 00 00 00 02 de 00 1e 7e e8 10 7e
00015b0 e8 13 7e e8 16 7e e8 19 7e e8 1c 7e e8 1f 7e e8
00015c0 22 7e e8 25 7e e8 28 7e e8 2b 00 00 00 00 00 00
00015d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00016a0 00 00 00 00 02 d3 e5 18 d3 88 d3 d6 f3 c2 f3 c8
00016b0 d3 cf d3 cb d3 b5 fb 1b d3 70 d3 aa d3 99 d3 97
00016c0 02 d3 70 6d be f3 e2 bf d3 e3 30 01 bf d3 e1 86
00016d0 13 a7 9f d3 e3 86 16 a7 9f d3 e3 39 a6 9f d3 e3
00016e0 84 01 27 f8 a6 9f d3 e1 84 7f 39 8d ef 34 02 a6
00016f0 9f d3 e3 84 02 27 f8 35 02 a7 9f d3 e1 39 34 02
0001700 a6 9f d3 e3 84 01 35 02 39 be d3 df 86 ff a7 84
0001710 86 3c a7 01 86 8f a7 84 a6 84 86 3d a7 01 39 86
0001720 04 20 02 86 8f a7 9f d3 df 39 a6 9f d3 df 7e c7
0001730 00 02 d3 df 06 f7 f2 f7 e8 f7 e9 16 cd 00 00 00
0001740 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
00017a0

$14C0 (5312) 以下の Driver と Console を削除
dd if=FLEX.SYS of=FLEX.COR bs=1 count=5312

apple2 dsk ファイルと flex dsk ファイルの相互変換
track #0 を削除し、セクター順を apple logical から flex に並べ替える
　a2dsk2flexdsk <a2.dsk >flex.dsk 

FlexDrvWin を使い以下を、パケット形式で flex.dsk 書き込む
 FLEX.COR 

セクター順を flex から apple logical に並べ替える。track 0 はない
　flexdsk2a2dsk <flex.dsk >a2.dat 

apple2 dsk の track 0 を a2t0.dat に保存
　dd if=a2.dsk of=a2t0.dat bs=256 count=16 
track 0 と残りのトラックをつなげる
　cat a2t0.dat a2.dat >a2.dsk

DOS3.3 32k RAM で INIT した dsk の Track 0 を取り出す。
  dd if=DOS3.3-32K.dsk of=dos33-32k-track0.dat
Apple FLEX のボディにつなげる
  cat dos33-32k-track0.dat a2.dat >a2flex.dsk

Drive 1 に FLEXDEV.dsk(DOS3.3)、Drive 2 に a2flex.dsk(FLEX) を入れる。

BLOAD ZAP,D1
CATALOG,D2
2:0 1 1
900G
BLOAD IPL,D1,A$800
CATALOG,D2
2:0 1 2
900G
2:0 0 1
900G
BLOAD IPL2,D1
CATALOG,D2
2:0 0 2
900G

BLOAD MILLBIOS,D1,A$800
CATALOG,D2
2:0 A 2
900G

BLOAD DRIVER.5E00,D1,A$800
CATALOG,D2
2:0 B 2
900G

BLOAD CONSOLE.5370,D1,A$870
BLOAD CONSOLE.53E5,D1,A$8E5
CATALOG,D2
2:0 C 2
900G

BLOAD FLEXLOAD,D1,A$800
CATALOG,D2
2:0 D 2
900G
2:1 0 2
900G

BLOAD TESTUTIL.8100,D1,A$800
CATALOG,D2
2:0 E 2
900G

BLOAD OS9ERROR,D1,A$800
CATALOG,D2
2:0 F 2
900G
CATALOG,D1


手動で flex を起動し、
Drive 1 に a2flex.dsk を入れる (a2flex-before-link.dsk)
+++LINK 1.FLEX.COR
a2flex.dsk で起動
+++SAVE DISK.BIN,DE00,DEC5
+++SAVE CONSOLE.BIN,D370,D3FC,CD00
+++APPEND FLEX.COR,DISK.BIN,CONSOLE.BIN,FLEX.SYS
+++LINK FLEX.SYS
(a2flex-after-link.dsk)

FLEXDEV.dsk で起動
]BLOAD NEWDISK,A$8100
a2flex-after-link.dsk に差し替え
]PR#6
+++SAVE NEWDISK.CMD,0100,04FB,0100
(a2flex-add-newdisk.dsk)

newdisk のテスト
空ディスクを drive 1 に入れ初期化 (a2flexwork.dsk)
+++NEWDISK 1
+++COPY FLEX.SYS 1
+++LINK 1.FLEX.SYS
+++COPY NEWDISK.CMD 1
+++COPY COPY.CMD 1
+++COPY LINK.CMD 1
a2flexwork.dskを drive 0 に入れリブート
別の空ディスクを drive 1 に入れ初期化 (a2flextemp.dsk)
+++NEWDISK 1
+++COPY FLEX.SYS 1
+++LINK 1.FLEX.SYS
a2flextemp.dsk を drive 0 に入れリブート


BLOAD FLEXCOR.BIN,A$4700
BLOAD CONSOLE.5370,A$5370
BLOAD CONSOLE.53E5,A$53E5
BLOAD DRIVER.5E00,A$5E00
BLOAD MILLBIOS
BSAVE FLEX,A$4700,L$1800

DOS3.3のブートシーケンス
PR#6
Boot0 $801
 $C600 からの ROM ルーチンが、ドライブ0、トラック0、セクタ0を $800 にロードし、$801 にジャンプ
Boot1 $801
 トラック0、ロジカルセクタ9から0が、$3600-3FFFに読み出され、$3700にジャンプ
　つまり、トラック0、セクタ1が$3700から実行される。
Boot2 #3700
 トラック2、セクタ4から逆順に、$3F00から下位アドレスに読み出し、$3D00にジャンプ

T0S0 -> $3600
T0S1 -> $3700
T0S2 -> $3800
T0S3 -> $3900
T0S4 -> $3A00
T0S5 -> $3B00
T0S6 -> $3C00
T0S7 -> $3D00
T0S8 -> $3E00
T0S9 -> $3F00

Boot2を書き換えることで、IPLを実現する。
Track0, Sector1 を書き換えて、Sector A-D を書き領域に読み出す。

T0SA(A):BIOS -> $6000 (6809 $E000)
T0SB(8):Driver -> $5E00 (6809 $DE00)
T0SC(6):Console -> $5300 (6809 $D300)
T0SD(4):FLEXLOAD -> $6100 (6809 $E100)
T0SE(2):TestUtil -> $6200 (6809 $E200)
T0SF(F):MTEST -> $6300 (6809 $E300)
T1S0(0):FLEXLOAD -> $4100 (6809 $C100)


ASMB ワークメモリ変更
+++GET ASMB.CMD
+++MON
*8003:01 8C 00 93 FF 95 00 96 FF 97 00 98 FF 99 00 A1 FF A2 00 BF FF
*60A3G
+++SAVE ASMB.CMD,0,2D8E,0

$8C00-$93FF(0C00-13FF):SOURCE BUFFER
$9500-$96FF(1500-16FF):MACRO NAME TABLE
$9700-$98FF(1700-18FF):MACRO ACTIVATION BUFFER
$9900-$A1FF(1900-21FF):MACRO TEXT BUFFER
$A200-$BFFF(1100-3FFF):SYMBOL TABLE

$8C00..$C000 AVM=$3400 Bytes
SYMBOL TABLE		= (AVM-1K)*0.625=7680=$1E00
MACRO TEXT BUFFER	= (AVM-1K)*0.188=2310$900
MACRO NAME TABLE	= (AVM-1K)*0.031=380=$200
MACRO ACTIVATION BUFFER	= (AVM-1K)*0.031=380=$200
SOURCE BUFFER		= AVM-256-(sum of above)=2306=$900

アセンブラのテスト
+++EDIT HELLO.TXT
       ORG $100
TEST   LDX #MES
       JSR $CD1E
       JMP $CD03
MES    FCC 'HELLO'
       FCB 4
       END TEST
+++ASMB HELLO,HELLO.CMD

RDKEY $FD0C カーソルを表示し、一文字入力



Apple DOS 3.3 リロケータを無効にする。
Beneath Apple DOS の ZAP を使用して、
02:0 A 1 (Track 0 Sector A Read 1)
900G
803:4c 84 1D (JMP $1D84)
02:0 A 2 (Track 0 Sector A Write 2)
900G

Log(Phy)DOS-MASTER	32KB	32KRAM		FLEX
S0(0)	01 A5		<-	$7600:01 A5	<-
S1(D)	8E E9		<-	$7700:8E E9	A9 01
S2(B)	A2 00		<-	$7800:A2 00	<-
S3(9)	00 88		<-	$7900:00 88	<-
S4(7)	A2 11		<-	$7A00:A2 11	<-
S5(5)	01 0A		<-	$7B00:00 00	01 1A
S6(3)	10 A1		<-	$7C00:00 01	10 A1
S7(1)	84 48		<-	$7D00:84 48	<-
S8(E)	D0 E5		<-	$7E00:D0 E5	<-
S9(C)	E3 18		D3 18	$7F00:D3 18	<-

SA(A)	4C 84		00 00	BIOS		A9 C1 $6000
SB(8)	90 AF		00 00	DRIVER		7E DE $DE00
SC(6)	E3 1C		D3 5C	CONSOLE		7E DE $D300
SD(4)	9D 75		<-	FLEXLOAD	20 0A $6100
SE(2)	A2 02		<-	TESTUTIL	10 CE $6200
SF(F)	AD 00		<-	FREE		AD 00 $6300

6809(STD)	6809(FLIP)	6502
0000		8000		0000
1000		9000		1000
2000		A000		2000
3000		B000		3000
4000		C000		4000
5000		D000		5000
6000		E000		6000


6809(os9)	6809(os9/flip)	6502
0000		8000		1000
1000		9000		2000
2000		A000		3000
3000		B000		4000
4000		C000		5000
5000		D000		6000
6000		E000		7000
7000		F000		8000
8000		0000		9000
9000		1000		A000
A000		2000		B000
B000		3000		D000	ROM
C000		4000		E000	ROM
D000		5000		F000	ROM
E000		6000		C000	I/O
F000		7000		0000	SYS
