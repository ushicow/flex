* APPLE2 BIOS FOR FLEX
*   KEYBOARD / DISPLAY CONTROL
*   APPLE DOS RWTS ROUTINES
*   FOR 6502 PROCESSOR
*
* NOV.28,2021 NANJA.INFO
*
*
* RWTS AND IOB
*
RWTS	.EQ $77B5	DOS3.3 RWTS 32KB RAM
IOB	.EQ $77E8	DOS3.3 IOB 32KB RAM
DSLOT	.EQ IOB+1	DISK II SLOT NO. TIMES 16
CURDRV	.EQ IOB+2	DRIVE NUM
VOLREG	.EQ IOB+3	VOLUME NUM (0 IS ANY)
TRKREG	.EQ IOB+4	TRACK NUM
SECREG	.EQ IOB+5	SECTOR NUM
SECBUF	.EQ IOB+8	DATA BUFFER
COMREG	.EQ IOB+$C	READ=1, WRITE=2, INIT=3
RETCODE	.EQ IOB+$D	ERROR CODE
LSTSLOT	.EQ IOB+$F	PREVIOUS SLOT NUM ACCESSED
LSTDRV	.EQ IOB+$10	PREVIOUS DRIVE NUM ACCESSED
*
	.IN APPLE.EQU
	.OR BIOS
	.TF FLEXBIOS
*
START	LDX CARD	SET XREG TO AP10 SLOT NUMBER X 16
	LDY CARDID	0 IS THE MILL
	BNE STARTAP
	JMP STARTML
STARTAP	LDA #0		PREPARE TO ZERO OUT AND INITIALIZE
	STA RAMDF,X	HALT THE 6809
	STA KEYLOC	SET KEYLOC MAILBOX AS EMPTY
	STA TVLOC	SET TVLOC MAILBOX AS EMPTY
	STA FLAG	SET SEMAPHORE FLAG AS NOP
	STA RUN,X	START THE 6809
*
SCANAP	LDA KYBD	SET AREG TO KEYBOARD INPUT
	BPL DISPAP 	IF NO KEYIN GO CHECK TV OUT
	CMP #$82
	BEQ BREAKAP	IF CTL-B BREAK TO MONITOR
	LDY KEYLOC
	BNE DISPAP
	LDY STROBE
	AND #$7F
	STA KEYLOC
DISPAP	LDA TVLOC
	BEQ CONTAP	CONTINUE
	CMP #$0A	IGNORE LINE FEED
	BEQ SKIPAP
	ORA #$80
	STA ROM,X
	JSR COUT
	STA RUN,X
SKIPAP	LDA #0
	STA TVLOC
CONTAP	LDA FLAG	CHECK SEMAPHORE FLAG
	BEQ SCANAP
	CMP #F.RWTS
	BEQ APDOS
	CMP #F.6502
	BEQ AP6502
BREAKAP	STA HALT,X
	BRK		BREAK TO APPLE II MONITOR
	NOP		NO OPARATION FOR BRK INSTRUCTION
	JMP START
*
APDOS	JMP APDOS.A
AP6502	JMP APPLE.A
*
SCANML	LDA KYBD	CHECK KEYBOARD
	BPL DISPML	 IF NOT CHECK TV OUT
	CMP #$82
	BEQ BREAKML
	LDY KEYLOC-$8000
	BNE DISPML
	LDY STROBE
	AND #$7F
	STA KEYLOC-$8000
DISPML	LDA TVLOC-$8000
	BEQ CONTML	CONTINUE
	CMP #$0A	IGNORE LINE FEED
	BEQ SKIPML
	ORA #$80
	JSR COUT
SKIPML	LDA #$00
	STA TVLOC-$8000
CONTML	LDA FLAG-$8000	CHECK SEMAPHORE FLAG
	BEQ SCANML
	CMP #F.RWTS
	BEQ MLDOS
	CMP #F.6502
	BEQ ML6502
BREAKML	LDA #$0
	STA MLHALT,X
	BRK		BREAK TO APPLE II MONITOR
	NOP		NO OPARATION FOR BRK INSTRUCTION
	JMP RESTART
*
MLDOS	JMP APDOS.M
ML6502	JMP APPLE.M
*
* COPY A PAGE MEMORY FROM ADDR TO DEST
*
COPYMEM	LDY #0
:1	LDA (ADDR),Y
	STA (DEST),Y
	INY
	BNE :1
	RTS
*
ZZZBIOS	.EQ *
*
*
* BIOS FOR AP10
*
	.OR APBIOS
	.TF AP10BIOS
	LDX CARD
	STA RAM8C,X	COPY APPLE2 RAM $4100-41FF TO AP10 RAM $C100-C1FF
	LDA #0
	STA ADDR
	STA DEST
	LDA #$41
	STA ADDR+1
	LDA #$F1
	STA DEST+1
	JSR COPYMEM
*
	STA RAMDF,X	COPY APPLE2 RAM $5300-7FFF TO AP10 RAM $D300-FFFF
	LDA #$53
	STA ADDR+1
	LDA #$D3
	STA DEST+1
NEXT	JSR COPYMEM
	INC ADDR+1
	INC DEST+1
	BNE NEXT
	LDA #$C1	SET 6809 RESET VECTOR TO $C100
	STA RSTVCT
	LDA #0
	STA RSTVCT+1
	STA FLIP
	STA FLIP+1
	STA HALT,X
*
	LDA #SECTBUF
	STA SECBUF
	LDA #SECTBUF/256
	STA SECBUF+1
*
	JMP START
*
APDOS.A	LDA RAMDF,X
	LDA DRVNUM
	STA CURDRV
	LDA #0
	STA VOLREG
	LDA TRKNUM
	STA TRKREG
	LDA SECNUM
	STA SECREG
	LDA COMMAND
	STA COMREG
	CMP #1		READ
	BEQ GORWTS
	LDY #0		COPY WRITE DATA
SETBUF	LDA FILEBUF,Y
	STA SECTBUF,Y
	INY
	BNE SETBUF
GORWTS	LDA #IOB/256	CALL RWTS
	LDY #IOB
	STA HALT,X
	JSR RWTS
	BCS ONERR
	LDA #0		IF NO ERROR
	STA RETCODE	CLEAR IOB RETURN CODE
ONERR	LDA #0
	STA PREG0
	LDX CARD
	STA RAMDF,X
	LDA RETCODE	SET ERROR CODE
	STA ERRCODE
	LDA COMREG
	CMP #1		READ
	BNE DONE
	LDY #0		COPY READ DATA
GETBUF	LDA SECTBUF,Y
	STA FILEBUF,Y
	INY
	BNE GETBUF
DONE	JMP START
*
APPLE.A	LDA A2SUB	SET JSR XXXX
	STA GO+2
	LDA A2SUB+1
	STA GO+1
	LDA AREG
	STA AREG0
	LDA XREG
	STA XREG0
	LDA YREG
	STA YREG0
	LDA PREG
	STA PREG0
	STA HALT,X
	JSR RESTORE
	CLI		ENABLE 6502 INTERRUPTS
GO	JSR XXXX	RUN THE 6502 SUBROUTINE
	SEI		DISABLE 6502 INTERRUPTS
	JSR SAVE	STORE 6502 REGISTORS
	LDX CARD
	STA RAMDF,X
	LDA AREG0
	STA AREG
	LDA XREG0
	STA XREG
	LDA YREG0
	STA YREG
	LDA PREG0
	STA PREG
	JMP START
XXXX	RTS
ZZZAP10	.EQ *
*
* BIOS ROUTINE FOR THE MILL
*
	.OR MLBIOS
	.TF MILLBIOS
*
	LDA #$C1	SET 6809 RESET VECTOR FOR FLEXLOAD
	STA RSTVCT-$8000
	LDA #$80
	STA FLIP-$8000
	LDA #$00
	STA RSTVCT+1-$8000
	STA FLIP+1-$8000
	JMP START
*
APDOS.M	LDA DRVNUM-$8000
	STA CURDRV
	LDA TRKNUM-$8000
	STA TRKREG
	LDA SECNUM-$8000
	STA SECREG
	LDA COMMAND-$8000
	STA COMREG
	LDA #0
	STA VOLREG
	STA MLHALT,X
	LDA #IOB/256	CALL RWTS
	LDY #IOB
	JSR RWTS
	BCS NOERR
	LDA #0		IF NO ERROR
	STA RETCODE	CLEAR IOB RETURN CODE
NOERR	LDA RETCODE	SET ERROR CODE
	STA ERRCODE-$8000
	JMP RESTART
*
APPLE.M	LDA A2SUB-$8000	SET JSR XXXX
	STA GOAP+2
	LDA A2SUB+1-$8000
	STA GOAP+1
	LDA AREG-$8000
	STA AREG0
	LDA XREG-$8000
	STA XREG0
	LDA YREG-$8000
	STA YREG0
	LDA PREG-$8000
	STA PREG0
	JSR RESTORE	RESTORE 6502 REGISTOR
	CLI		ENABLE 6502 INTERRUPTS
GOAP	JSR XXXX	RUN THE 6502 SUBROUTINE
	SEI		DISABLE 6502 INTERRUPTS
	JSR SAVE	STORE 6502 REGISTORS
	LDA AREG0
	STA AREG-$8000
	LDA XREG0
	STA XREG-$8000
	LDA YREG0
	STA YREG-$8000
	LDA PREG0
	STA PREG-$8000
	JMP RESTART
*
STARTML	LDA #$00	PREPARE TO ZERO OUT AND INITIALIZE
	STA MLHALT,X	 HALT THE 6809
	STA MLRESET,X	 RESET THE 6809
	STA MLROM,X	 DISABLE THE MILLS ROM-ENABLE MAPPING
	STA KEYLOC-$8000 SET KEYLOC MAILBOX AS EMPTY
	STA TVLOC-$8000	 SET TVLOC MAILBOX AS EMPTY
	STA FLAG-$8000	 SEMAPHORE FLAG
	LDA #$80	PREPARE TO RAISE THE CONTROL LINES
	STA MLNMI,X	 RAISE 6809 NMI (NO INTERRUPT)
	STA MLIRQ,X	 RAISE 6809 IRQ (NO INTERRUPT)
	STA MLFIRQ,X	 RAISE 6809 FIRQ (NO INTERRUPT)
	STA MLHALT,X	 START THE 6809
	STA MLRESET,X	 AND ALLOW TO PROCEED OUT OF RESET MODE
	JMP SCANML
RESTART	LDX CARD
	LDA #0
	STA FLAG-$8000
	LDA #$80
	STA MLHALT,X	START UP 6809
	JMP SCANML
ZZZMILL	.EQ *
	.EN
