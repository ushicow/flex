*
* NEW DISK FOR MILL FLEX
*
	.OR $100
	.TF NEWDISK

* DISK SIZE PARAMETERS
MAXTRK	.EQ 34		NUMBER OF TRACKS
SMAX	.EQ 16		MAX SECTORS
TKSZ	.EQ 256*16

* WORK SPACE WHERE ONE TRACK OF DATA IS SETUP
WORK	.EQ $800	WORK SPACE
WKEND	.EQ TKSZ+WORK	SINGLE DENSITY

* GENERAL EQUATORS
FIRST	.EQ $0101	FIRST USER SECTOR
FCS	.EQ 30		FCB CURRENT SECTOR
FSB	.EQ 64		SECTOR BUFFER
IRS	.EQ 16		INFO RECORD START
AVLP	.EQ FSB+IRS+13
DIRSEC	.EQ 5		FIRST DIR. SECTOR
RDSS	.EQ 9		READ SS FMS CODE
WTSS	.EQ 10		WRITE SS FMS CODE
DATE	.EQ $CC0E	DOS DATE

* FLEX ROUTINES EQUATES
WARMS 	.EQ $CD03
GETCHR	.EQ $CD15
PUTCHR	.EQ $CD18
INBUF	.EQ $CD1B
PSTRNG	.EQ $CD1E
PCRLF	.EQ $CD24
GETFIL	.EQ $CD2D
OUTDEC	.EQ $CD39
OUT2HS	.EQ $CD3C
GETHEX	.EQ $CD42
INDEC	.EQ $CD48
FMSCLS	.EQ $D403
FMS	.EQ $D406

* DISK DRIVER ROUTINES
DWRITE	.EQ $DE03	WRITE A SINGLE SECTOR
REST	.EQ $DE09	RESTORE READ
DSEEK	.EQ $DE1B	SEEK TO TRACK
DRIVE	.EQ $DE0C	SELECT DRIVE

NEWDISK	BRA FORM1
VN	.DA #5		VERSION NUMBER

* TEMPORARY STORAGE
TRACK	.BS 1
SECTOR	.BS 1
BADCNT	.BS 1		BAD SECTOR COUNT
DRN	.BS 1
INDEX	.BS 2
SECCNT	.BS 2		SECTOR COUNT
FSTAVL	.BS 2		FIRST AVAILABLE
LSTAVL	.BS 2		LAST AVAILABLE
MAX	.BS 1		MAX SECTOR
FKFCB	.BS 4
VOLNAM	.BS 11
VOLNUM	.BS 2

OUTIN	JSR PSTRNG	OUTPUT STRING
OUTIN2	JSR GETCHR	GET RESPONSE
	ANDA #$5F	MASK IT UPPER CASE
	CMPA #'Y	SEE IF "YES"
	RTS

FORM1	LDA #SMAX
	STA MAX
	JSR GETHEX	GET DRIVE NUMBER
	LBCS EXIT
	TFR X,D
	CMPD #3		ENSURE 0 TO 3
	BHI EXIT
	LDX #WORK
	STB 3,X
	STB DRN
	LDX #SURES	ASK IF HE'S SURE
	BSR OUTIN	PRINT & GET RESPONSE
	BNE EXIT	EXIT IF "NO"
	LDX #SCRDS	CHECK SCRACH DRIVE NO.
	JSR PSTRNG	OUTPUT IT
	LDX #WORK+2
	CLR 0,X
	CLRB
	JSR OUTDEC
	LDA #'?		PRINT QUESTION MARK
	JSR PUTCHR
	LDA #$20
	JSR PUTCHR
	BSR OUTIN2	GET RESPONSE
	BNE EXIT	EXIT IF "NO"
FORM26	LDX #NMSTR	ASK FOR VOLUME NAME
	JSR PSTRNG	PRINT IT
	JSR INBUF	GET LINE
	LDX #FKFCB	POINT TO FAKE
	JSR GETFIL
FORM27	LDX #NUMSTR	OUTPUT STRING
	JSR PSTRNG
	JSR INBUF	GET LINE
	JSR INDEC	GET NUMBER
	BCS FORM27	ERROR?
	STX VOLNUM	SAVE NUMBER
	JSR PCRLF	PRINT CR & LF
	LDX #WORK
	JSR DRIVE	RESTORE DISK
	BEQ FORMAT	SKIP IF NO ERROR
	LDX #WPST
	BITB #$40	WRITE PROTECT ERROR?
	BNE EXIT2	SKIP IF SO	

* EXIT ROUTINES
EXIT	LDX #ABORTS	REPORT ABORTING
EXIT2	JSR PSTRNG	OUTPUT IT
EXIT3	JSR FMSCLS
*	CLI
	JMP WARMS	RETURN

* MAIN FORMATTING LOOP

FORMAT	JSR FMTDSK	INITIALIZE DISK
	LBNE REMSE1	ERROR RETURN
	CLR TRACK
FORM3	CLR SECTOR
	LDX #WORK
FORM4	BSR DOSEC	PROCESS RAM WITH INFO
	INC SECTOR	ADVANCE TO NEXT
	LDA SECTOR	CHECK VALUE
	CMPA MAX
	BNE FORM4	REPEAT?
FORM47	LDA TRACK	GET TRACK NUMBER
	JSR WRTTRK	WRITE TRACK
FORM6	INC TRACK	BUMP TRACK
	LDA TRACK	CHECK VALUE
	CMPA #MAXTRK
	BNE FORM3
	LBRA SETUP	DONE...GO FINISH UP

* SET (B) BYTEST OF MEMORY TO (A) STARTING AT (X)
SET 	STA ,X+
	DECB
	BNE SET
	RTS

* PROCESS SECTOR IN RAM
DOSEC	LDA TRACK	GET TRACK NO.
	LDB SECTOR	GET SECTOR NO.
	INCB
	CMPB MAX	END OF TRACK?
	BNE DOSEC7	SKIP IF NOT
	INCA		BUMP TRACK NO.
	CLRB		RESET SECTOR NO.
	CMPA #MAXTRK	END OF DISK?
	BNE DOSEC7	SKIP IF NOT
	CLRA		SET ZERO FORMARK LINK
	LDB #-1
DOSEC7	INCB		BUMP SECTOR NO.
	STD ,X++	PUT IN SECTOR BUFFER
	CLRA		CLEAR SECTOR BUFFER
	LDB #254
	BSR SET
	RTS

* READ ALL SECTORS FOR ERRORS
SETUP	LDB MAX		GET MAX SECTORS
	LDA #MAXTRK-1
	STD LSTAVL	SET LAST AVAIL.
	MUL		FIND TOTAL SECTORS
	STD SECCNT	SAVE IT
	LDX #FIRST	SET FIRST AVAIL
	STX FSTAVL
	LDA DRN
	STA WORK+3
	CLRA		CLEAR COUNTER
	STA BADCNT
	STA TRACK	SET TRACK
	INCA
	STA SECTOR	SET SECTOR
SETUP2	BSR CHKSEC	GO CHECK SECTOR
	BNE REMSEC	ERROR?
	CLR BADCNT	CLEAR COUNTER
SETUP4	LDD TRACK	GET TRACK & SECTOR
	BSR FIXSEC	GET TO NEXT ADR
	LBEQ DOTRK	SKIP IF FINISHED
	STD TRACK	SET TRACK & SECTOR
	BRA SETUP2	REPEAT

* CHECK IF SECTOR GOOD
CHKSEC	LDX #WORK	POINT TO FCB
	LDD TRACK	GET TRACK & SECTOR
	STD FCS,X	SET CURRENT TRK & SCT
	JMP READSS	GO DO READ

* SET TRK & SEC TO NEXT
FIXSEC	CMPB MAX	END OF TRACK?
	BNE FIXSE4	SKIP IF NOT
	INCA		BUMP TRACK
	CLRB		RESET SECTOR NO.
FIXSE4	INCB		BUMP SECTOR NO.
	CMPA #MAXTRK	END OF DISK?
	RTS

* REMOVE BAD SECTOR FROM FREE SECTOR CHAIN
REMSEC	INC BADCNT	UPDATE COUNTER
	BEQ REMSE1	COUNT OVERFLOW?
	LDA TRACK	GET TRACK
	BNE REMSE2	TRACK 0?
	LDB SECTOR	GET SECTOR
	CMPB #DIRSEC	PAST DIRECTORY?
	BHI REMSE2
REMSE1	LDX #FATERS	REPORT FATAL ERROR
	JMP EXIT2	REPORT IT
REMSE2	LDX #WORK	POINT TO FCB
	LDD FSTAVL	GET 1ST TRACK & SECTOR
	CMPD TRACK	CHECK TRACK & SECTOR
	BNE REMSE3
	BSR FIXSEC	SET TO NEXT
	STD FSTAVL	GET NEW ADR
	BRA REMSE8	GO DO NEXT
REMSE3	LDD TRACK	GET TRACK & SECTOR
	SUBB BADCNT
	BEQ REMS35	UNDERFLOW?
	BPL REMSE4
REMS35	DECA		DEC TRACK
	LDB MAX		RESET SECTOR
REMSE4	STD FCS,X	SET CURRENT ADR
	BSR READSS	GO DO READ
	BNE REMSE1	ERROR?
	LDD FSB,X	GET LINK ADR
	BSR FIXSEC	POINT TO NEXT
	BNE REMSE6	OVERFLOW?
	LDD FCS,X	GET CURRENT ADR
	STD LSTAVL	SET NEW LAST AVAIL
	CLRA		SET END LINK
	CLRB
REMSE6	STD FSB,X	SET NEW LINK
	BSR WRITSS	GODO WRITE
	BNE REMSE1	ERROR?
REMSE8	LDX SECCNT	GET SEC COUNT
	LEAX -1,X	DEC IT ONCE
	STX SECCNT	SAVE NEW COUNT
	LDX #BADSS	REPORT BAD SECTOR
	JSR PSTRNG	OUTPUT IT
	LDX #TRACK	POINT TO ADDRESS
	JSR OUT2HS	OUTPUT IT
	LDA #$20
	JSR PUTCHR
	LEAX 1,X	BUMP TO NEXT
	JSR OUT2HS
	JMP SETUP4	CONTINUE

* READ A SECTOR
READSS	LDX #WORK	POINT TO FCB
	LDA #RDSS	SET UP COMMAND
	STA 0,X
	JMP FMS		GO DO IT

* WIRET A SECTOR
WRITSS	LDX #WORK 	POINT TO FCB
	LDA #WTSS	SETUP COMMAND
	STA 0,X
	JSR FMS		GO DO IT
	BEQ READSS	ERROR?
	RTS		ERROR RETURN

* SETUP SYSTEM INFORMATION RECORD
DOTRK	LDX #WORK	POINT TO SPACE
	CLR FCS,X	SET TO DIS
	LDA #3		SECTOR 3
	STA FCS+1,X
	BSR READSS	READ IN SIR SECTOR
	BNE DOTRK4	ERROR?
	LDX #WORK	FIX POINTER
	CLR FSB,X	CLEAR FORWARD LINK
	CLR FSB+1,X
	LDD FSTAVL	ADDR. OF 1ST FREE SCTR.
	STD AVLP,X	SET IN SIR
	LDD LSTAVL	ADDR. OF LAST FREE SCTR.
	STD AVLP+2,X	PUT IN SIR
	LDD SECCNT	GET TOTAL SECTOR COUNT
	STD AVLP+4,X 	PUT IN SIR
	LDA #MAXTRK-1	GET MAX TRACK NO.
	LDB MAX		SET MAX SECTORS/TRACK
	STD AVLP+9,X	SAVE MAX TRACK * SECTOR
	LDD DATE	SET DATE INFO SIR
	STD AVLP+6,X
	LDA DATE+2
	STA AVLP+8,X
	LDB #13
	LDY #VOLNAM	POINT TO VOLUME NAME
	LDX #WORK
DOTR33	LDA ,Y+		COPY NAME TO SIR
	STA FSB+IRS,X
	LEAX 1,X
	DECB		DEC THE COUNT
	BNE DOTR33
	BSR WRITSS	WRITE SIR BACK OUT
	BEQ DIRINT	SKIP IF NO ERROR
DOTRK4	JMP REMSE1	GO REPORT ERROR

* INITALIZE DIRECTORY
DIRINT	LDX #WORK	SET POINTER
	LDA #MAX 	GET MAX FOR TRK 0
DIRIN1 	STA FCS+1,X	SET UP
	JSR READSS	READ IN SECTOR
	BNE DOTRK4	ERROR?
	LDX #WORK	RESTORE POINTER
	CLR FSB,X	CLEAR LINK
	CLR FSB+1,X
	JSR WRITSS	WRITE BACK OUT
	BNE DOTRK4	ERRORS?

* SAVE BOOT ON TRACK 0 SECTOR 1
DOBOOT	LDX #$E100	POINT TO LOADER CODE
	CLRA 		TRACK #0
	LDB #1		SECTOR #1
	JSR DWRITE	WRITE THE SECTOR
	BNE DOTRK4	SKIP IF AN ERROR

* REPORT TOTAL SECTOR AND EXIT
	LDX #WORK	SETUP AN FCB
	LDA #16		OPEN SIR FUNCTION
	STA 0,X
	JSR FMS		OPEN THE ISR
	BNE DOTRK4
	LDA #7		GET INFO RECORD
	STA 0,X
	JSR FMS		GET 1ST INFO RECORD
	BNE DOTRK4
	LDX #CMPLTE	REPORT FORMATTING COMPLETE
	JSR PSTRNG
	LDX #SECST	POINT TOTAL SECTORS STRING
	JSR PSTRNG
	LDX #WORK+21	TOTAL IS IN INFO RECORD
	CLRB
	JSR OUTDEC	PRINT NUMBER
	JMP EXIT3	ALL FINISHED!

* WRITE TRACK ROUTINE
WRTTRK	LDB #1
	LDX #WORK
NTRK	STD TS		SAVE T/S
	STX W
	JSR DWRITE
	BNE WERR	ERROR RETURN
	LDX W
	LDB #$80	WORK + $100
	ABX
	ABX
	LDD TS		RESTORE T/S
	INCB
	CMPB #SMAX+1
	BLT NTRK
WRET	RTS
TS	.DA 0		TRACK AND SECTOR
W	.DA 0		WORK
WERR	LDX #BADTRK	REPORT BAD TRACK
	JSR PSTRNG	REPORT IT
	LDX #TRACK	REPORT TRACK NO.
	JSR OUT2HS
	JSR PCRLF	PRINT CR & LF
	LDX #FATERS	REPORT FATAL ERROR
	JMP EXIT2	REPORT IT

* INIT TRACK
P.DOS	.EQ $8008	FOR APPLE DOS
IOB	.EQ $F7E8	APPLE DOS IOB $77E8
CURDRV	.EQ IOB+2
VOLREG	.EQ IOB+3
TRKREG	.EQ IOB+4
SECREG	.EQ IOB+5
SECBUF	.EQ IOB+8
NUMBUF	.EQ IOB+$B
COMREG	.EQ IOB+$C
RETCODE	.EQ IOB+$D
FMTCMD	.EQ 4		RWTS FORMAT COMMAND
WRCMD	.EQ 2		RWTS WRITE COMMAND
ADOS	.EQ $76		DOS3.3 RWTS ROUTINE ADDRESS HIGH
BIOS	.EQ $60		APPLE II BIOS ADDRESS HIGH

FMTDSK	LDA DRN		FLEX DRV + 1 = APPLE DRV
	INCA
	STA CURDRV
	CLR VOLREG
	LDA #FMTCMD
	STA COMREG
	JSR A2DOS
	
	LDA #WRCMD	WRITE APPLE RWTS TO T0/S0-9
	STA COMREG
	LDA #0
	STA TRKREG
	STA SECBUF	BUF LOW
	STA SECREG
	LDA #ADOS	BUF HIGH TO APPLE RWTS
	STA SECBUF+1	
W0	JSR A2DOS
	INC SECREG
	INC SECBUF+1
	LDA SECREG
	CMPA #10
	BLT W0		NEXT SECTOR

	LDA #$A		SECTOR A, APPLE BIOS
	STA SECREG
	LDA #BIOS
	STA SECBUF+1
	JSR A2DOS

	INC SECREG	SECTOR B, FLEX DRIVER
	LDA #$5E
	STA SECBUF+1
	JSR A2DOS

	INC SECREG	SECTOR C, FLEX CONSOLE
	LDA #$53
	STA SECBUF+1
	JSR A2DOS

	INC SECREG	SECTOR D, FLEXLOAD
	LDA #BIOS+1
	STA SECBUF+1
	JSR A2DOS

	INC SECREG	SECTOR E, TESTUTIL
	INC SECBUF+1
	JSR A2DOS

	INC SECREG	SECTOR F, FREE
	INC SECBUF+1

A2DOS	INC P.DOS	FOR 6502
.1	EXG D,D		IDLE
	TST P.DOS
	BNE .1		NOT READY YET
	LDB RETCODE
	LBNE REMSE1	ERROR RETURN
	RTS

* STRINGS
SURES	.AS 'ARE YOU SURE? '
	.DA #4
WPST	.AS 'DISK IS PROTECTED!'
	.DA #4
SCRDS	.AS 'SCRATCH DISK IN DRIVE '
	.DA #4
FATERS	.AS 'FATAL ERROR --- '
ABORTS	.AS 'FORMATTING ABORTED'
	.DA #4
BADSS	.AS 'BAD SECTOR AT '
	.DA #4
CMPLTE	.AS 'FORMATTING COMPLETE'
	.DA #4
SECST	.AS 'TOTAL SECTORS '
	.DA #4
NMSTR	.AS 'VOLUME NAME? '
	.DA #4
NUMSTR	.AS 'VOLUME NUMBER? '
	.DA #4
BADTRK	.AS 'BAD TRACK AT '
	.DA #4
